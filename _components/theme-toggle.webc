<button id="theme-toggle" class="theme-toggle" aria-label="theme toggle button">
	<svg
		class="theme-toggle-icon__light"
		xmlns="http://www.w3.org/2000/svg"
		width="26"
		height="26"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-moon"
	>
		<title>theme toggle icon</title>
		<path d="M12 3a6.364 6.364 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
	</svg>
	<svg
		class="theme-toggle-icon__dark"
		alt="theme toggle icon"
		xmlns="http://www.w3.org/2000/svg"
		width="28"
		height="28"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-sun-medium"
	>
		<title>theme toggle icon</title>
		<path d="M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z"></path>
		<path d="M12 3v1"></path>
		<path d="M12 20v1"></path>
		<path d="M3 12h1"></path>
		<path d="M20 12h1"></path>
		<path d="m18.364 5.636-.707.707"></path>
		<path d="m6.343 17.657-.707.707"></path>
		<path d="m5.636 5.636.707.707"></path>
		<path d="m17.657 17.657.707.707"></path>
	</svg>
</button>

<script>
	const LS_KEY = "theme-toggle"

	class ThemeToggle extends HTMLElement {
		connectedCallback() {
			const html = document.documentElement;

			const applyTheme = (isDark) => {
				if (isDark) {
					html.classList.remove("light")
					html.classList.add("dark")
				} else {
					html.classList.remove("dark")
					html.classList.add("light")
				}
			}

			// The website should have a light theme by default, except if the user manually toggled it in the past
			let darkMode = localStorage.getItem(LS_KEY) === "dark"
			applyTheme(darkMode)

			const button = this.querySelector("#theme-toggle")
			button.addEventListener("click", function toggleTheme () {
				darkMode = !darkMode
				applyTheme(darkMode)
				localStorage.setItem(LS_KEY, darkMode ? "dark" : "light")
			})
		}
	}

	window.customElements.define("theme-toggle", ThemeToggle)
</script>

<!-- Hide theme toggle as long as JS is not enabled -->
<style webc:scoped>
	:host:not(:defined) {
		display: none;
	}
</style>

<style>
	.theme-toggle {
		box-sizing: border-box;
	}

	.theme-toggle:hover {
		color: var(--theme-toggle-hover-color);
	}

	.theme-toggle:focus-visible {
		box-shadow: inset 0px 0px 0px 2px var(--theme-toggle-hover-color);
		/* border: 2px solid var(--theme-toggle-hover-color); */
		color: var(--theme-toggle-hover-color);
	}

	.light .theme-toggle-icon__light,
	.dark .theme-toggle-icon__dark {
		display: block;
	}

	.light .theme-toggle-icon__dark,
	.dark .theme-toggle-icon__light {
		display: none;
	}
</style>
